<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mesaj Yönetimi - WebCreate</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/animations.css">
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
</head>
<body>
    <%- include('../partials/admin-header') %>

    <main class="container" style="min-height: 80vh; padding: 2rem 0;">
        <div class="animate-fade-in">
            <% 
            // Helper fonksiyonunu burada tanımla
            function getMessageStatusColor(message) {
                if (message.priority === 'urgent') return 'var(--danger)';
                if (!message.isRead) return 'var(--accent)';
                if (message.replied) return 'var(--success)';
                return 'var(--light-gray)';
            }
            %>
            
            <!-- Başlık ve Filtreler -->
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem; flex-wrap: wrap; gap: 1rem;">
                <div>
                    <h1 style="color: var(--white); margin-bottom: 0.5rem;">Mesaj Yönetimi</h1>
                    <p style="color: #ccc;">Gelen tüm iletişim formu mesajları</p>
                </div>
                
                <div style="display: flex; gap: 1rem; align-items: center;">
                    <div style="position: relative;">
                        <input 
                            type="text" 
                            id="messageSearch" 
                            placeholder="Mesaj ara..."
                            class="form-control" 
                            style="padding-left: 2.5rem; width: 250px;"
                        >
                        <span style="position: absolute; left: 1rem; top: 50%; transform: translateY(-50%); color: #ccc;">🔍</span>
                    </div>
                    
                    <select id="messageFilter" class="form-control" style="width: 180px;">
                        <option value="all">Tüm Mesajlar</option>
                        <option value="unread">📨 Okunmamış</option>
                        <option value="replied">✅ Cevaplanan</option>
                        <option value="urgent">🔴 Acil</option>
                        <option value="new">🆕 Yeni</option>
                    </select>
                    
                    <select id="categoryFilter" class="form-control" style="width: 180px;">
                        <option value="all">Tüm Kategoriler</option>
                        <option value="general">📝 Genel</option>
                        <option value="support">🛠️ Destek</option>
                        <option value="complaint">😠 Şikayet</option>
                        <option value="suggestion">💡 Öneri</option>
                        <option value="technical">⚙️ Teknik</option>
                    </select>
                </div>
            </div>

            <!-- İstatistik Kartları -->
            <div class="stats-grid" style="margin-bottom: 2rem;">
                <div class="stat-card">
                    <div class="stat-number"><%= messages.length %></div>
                    <div class="stat-label">Toplam Mesaj</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-number">
                        <%= messages.filter(m => !m.isRead).length %>
                    </div>
                    <div class="stat-label">Okunmamış</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-number">
                        <%= messages.filter(m => m.replied).length %>
                    </div>
                    <div class="stat-label">Cevaplanan</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-number">
                        <%= messages.filter(m => m.priority === 'urgent').length %>
                    </div>
                    <div class="stat-label">Acil</div>
                </div>
            </div>

            <!-- Mesaj Listesi -->
            <% if (messages.length > 0) { %>
                <div class="card">
                    <div style="display: grid; gap: 1rem;">
                        <% messages.forEach(message => { %>
                        <div class="message-item <%= message.isRead ? 'read' : 'unread' %> <%= message.priority === 'urgent' ? 'urgent' : '' %>" 
                             data-id="<%= message._id %>"
                             data-category="<%= message.category || 'general' %>"
                             data-status="<%= message.status || 'new' %>"
                             style="padding: 1.5rem; background: var(--medium-gray); border-radius: 10px; border-left: 4px solid <%= getMessageStatusColor(message) %>; cursor: pointer;"
                             onclick="toggleMessage('<%= message._id %>')">
                            
                            <div style="display: flex; justify-content: space-between; align-items: start; gap: 2rem; margin-bottom: 1rem;">
                                <div style="flex: 1;">
                                    <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 0.5rem; flex-wrap: wrap;">
                                        <h3 style="color: var(--white); margin: 0; font-size: 1.1rem;">
                                            <%= message.subject %>
                                        </h3>
                                        
                                        <div style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
                                            <% if (!message.isRead) { %>
                                            <span style="background: var(--accent); color: white; padding: 0.25rem 0.5rem; border-radius: 3px; font-size: 0.75rem;">
                                                YENİ
                                            </span>
                                            <% } %>
                                            
                                            <% if (message.priority === 'urgent') { %>
                                            <span style="background: var(--danger); color: white; padding: 0.25rem 0.5rem; border-radius: 3px; font-size: 0.75rem;">
                                                ACİL
                                            </span>
                                            <% } %>
                                            
                                            <span style="background: var(--dark-gray); color: #ccc; padding: 0.25rem 0.5rem; border-radius: 3px; font-size: 0.75rem;">
                                                <%
                                                    const categoryIcons = {
                                                        'general': '📝',
                                                        'support': '🛠️',
                                                        'complaint': '😠',
                                                        'suggestion': '💡',
                                                        'technical': '⚙️'
                                                    };
                                                    const messageCategory = message.category || 'general';
                                                %>
                                                <%= categoryIcons[messageCategory] %> <%= messageCategory %>
                                            </span>
                                            
                                            <span style="background: var(--dark-gray); color: #ccc; padding: 0.25rem 0.5rem; border-radius: 3px; font-size: 0.75rem;">
                                                <%
                                                    const statusIcons = {
                                                        'new': '🆕',
                                                        'in_progress': '🔄',
                                                        'resolved': '✅',
                                                        'closed': '🔒'
                                                    };
                                                    const messageStatus = message.status || 'new';
                                                %>
                                                <%= statusIcons[messageStatus] %> <%= messageStatus %>
                                            </span>
                                        </div>
                                    </div>
                                    
                                    <div style="color: #ccc; margin-bottom: 0.5rem;">
                                        <strong>Gönderen:</strong> <%= message.name %> (<%= message.email %>)
                                    </div>
                                    
                                    <div style="color: #ccc; font-size: 0.875rem;">
                                        <strong>Gönderim:</strong> 
                                        <%= new Date(message.createdAt).toLocaleDateString('tr-TR', { 
                                            year: 'numeric', 
                                            month: 'long', 
                                            day: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        }) %>
                                    </div>
                                </div>
                                
                                <div style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
                                    <% if (!message.replied) { %>
                                    <button onclick="replyToMessage('<%= message._id %>', event)" class="btn btn-success" style="padding: 0.5rem 1rem;">
                                        📧 Cevapla
                                    </button>
                                    <% } else { %>
                                    <span style="background: var(--success); color: white; padding: 0.5rem 1rem; border-radius: 5px; font-size: 0.875rem;">
                                        ✅ Cevaplandı
                                    </span>
                                    <% } %>
                                    
                                    <button onclick="deleteMessage('<%= message._id %>', event)" class="btn btn-danger" style="padding: 0.5rem 1rem;">
                                        🗑️ Sil
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Mesaj İçeriği -->
                            <div class="message-content" style="display: none;">
                                <div style="background: var(--dark-gray); padding: 1rem; border-radius: 5px; margin-bottom: 1rem;">
                                    <strong style="color: var(--white); display: block; margin-bottom: 0.5rem;">📝 Mesaj İçeriği:</strong>
                                    <p style="color: #ccc; line-height: 1.6; margin: 0; white-space: pre-wrap;"><%= message.message %></p>
                                </div>
                                
                                <!-- Cevaplanmışsa cevabı göster -->
                                <% if (message.replied && message.replyMessage) { %>
                                <div style="background: rgba(40, 167, 69, 0.1); padding: 1rem; border-radius: 5px; border-left: 4px solid var(--success);">
                                    <strong style="color: var(--white); display: block; margin-bottom: 0.5rem;">✅ Admin Cevabı:</strong>
                                    <p style="color: #ccc; line-height: 1.6; margin: 0; white-space: pre-wrap;"><%= message.replyMessage %></p>
                                </div>
                                <% } %>
                            </div>
                        </div>
                        <% }) %>
                    </div>
                </div>
            <% } else { %>
                <div class="card">
                    <div style="text-align: center; padding: 4rem 2rem; color: #ccc;">
                        <div style="font-size: 4rem; margin-bottom: 1rem;">📨</div>
                        <h3 style="color: var(--white); margin-bottom: 0.5rem;">Henüz mesaj bulunmuyor</h3>
                        <p>Kullanıcılar iletişim formu gönderdiğinde burada listelenecek</p>
                    </div>
                </div>
            <% } %>
        </div>
    </main>

    <%- include('../partials/footer') %>

    <!-- Mesaj Cevaplama Modal -->
    <div id="replyModal" class="modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); z-index: 1000; align-items: center; justify-content: center;">
        <div class="card" style="max-width: 600px; width: 90%; max-height: 90vh; overflow-y: auto;">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                <h3 style="color: var(--white); margin: 0;">Mesajı Cevapla</h3>
                <button onclick="closeReplyModal()" style="background: none; border: none; color: #ccc; font-size: 1.5rem; cursor: pointer;">×</button>
            </div>
            
            <form id="replyForm">
                <input type="hidden" id="replyMessageId">
                
                <div class="form-group">
                    <label class="form-label">Gönderen</label>
                    <div style="padding: 0.75rem; background: var(--medium-gray); border-radius: 5px; color: var(--white);">
                        <strong id="replySenderName"></strong> (<span id="replySenderEmail"></span>)
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Konu</label>
                    <div style="padding: 0.75rem; background: var(--medium-gray); border-radius: 5px; color: var(--white);">
                        <span id="replySubject"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Orijinal Mesaj</label>
                    <div style="padding: 0.75rem; background: var(--dark-gray); border-radius: 5px; color: #ccc; max-height: 200px; overflow-y: auto;">
                        <span id="replyOriginalMessage" style="white-space: pre-wrap;"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="replyMessage" class="form-label">Cevabınız *</label>
                    <textarea 
                        id="replyMessage" 
                        name="replyMessage" 
                        class="form-control" 
                        required 
                        rows="6"
                        placeholder="Kullanıcıya göndermek istediğiniz cevabı yazın..."
                    ></textarea>
                </div>
                
                <div style="display: flex; gap: 1rem; margin-top: 1.5rem;">
                    <button type="button" onclick="closeReplyModal()" class="btn btn-outline" style="flex: 1;">
                        İptal
                    </button>
                    <button type="submit" class="btn btn-success" style="flex: 1;">
                        📧 Cevabı Gönder
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
    // Mesaj arama
    document.getElementById('messageSearch').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const items = document.querySelectorAll('.message-item');
        
        items.forEach(item => {
            const subject = item.querySelector('h3').textContent.toLowerCase();
            const sender = item.querySelector('div > div:nth-child(2)').textContent.toLowerCase();
            
            if (subject.includes(searchTerm) || sender.includes(searchTerm)) {
                item.style.display = 'block';
            } else {
                item.style.display = 'none';
            }
        });
    });

    // Mesaj filtreleme
    document.getElementById('messageFilter').addEventListener('change', function(e) {
        filterMessages();
    });

    document.getElementById('categoryFilter').addEventListener('change', function(e) {
        filterMessages();
    });

    function filterMessages() {
        const statusFilter = document.getElementById('messageFilter').value;
        const categoryFilter = document.getElementById('categoryFilter').value;
        const items = document.querySelectorAll('.message-item');
        
        items.forEach(item => {
            let show = true;
            
            // Durum filtreleme
            if (statusFilter !== 'all') {
                switch(statusFilter) {
                    case 'unread':
                        if (item.classList.contains('read')) show = false;
                        break;
                    case 'replied':
                        if (!item.querySelector('.btn-success')) show = false;
                        break;
                    case 'urgent':
                        if (!item.classList.contains('urgent')) show = false;
                        break;
                    case 'new':
                        const messageDate = new Date(item.dataset.timestamp);
                        const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);
                        if (messageDate < oneDayAgo) show = false;
                        break;
                }
            }
            
            // Kategori filtreleme
            if (categoryFilter !== 'all' && item.dataset.category !== categoryFilter) {
                show = false;
            }
            
            item.style.display = show ? 'block' : 'none';
        });
    }

    // Mesaj detayını aç/kapa
    function toggleMessage(messageId) {
        const message = document.querySelector(`[data-id="${messageId}"]`);
        const content = message.querySelector('.message-content');
        
        content.style.display = content.style.display === 'none' ? 'block' : 'none';
        
        // Okundu olarak işaretle
        if (!message.classList.contains('read')) {
            markAsRead(messageId);
        }
    }

    // Mesajı okundu olarak işaretle
    async function markAsRead(messageId) {
        try {
            const response = await fetch(`/messages/admin/${messageId}/read`, {
                method: 'POST'
            });
            
            if (response.ok) {
                const message = document.querySelector(`[data-id="${messageId}"]`);
                message.classList.add('read');
                message.classList.remove('unread');
                message.style.borderLeftColor = 'var(--light-gray)';
                
                // Okunmamış mesaj sayısını güncelle
                updateUnreadCount();
            }
        } catch (error) {
            console.error('Mesaj okundu işaretleme hatası:', error);
        }
    }

    // Mesajı cevaplama
    function replyToMessage(messageId, event) {
        event.stopPropagation();
        
        const message = document.querySelector(`[data-id="${messageId}"]`);
        const senderText = message.querySelector('div > div:nth-child(2)').textContent;
        const senderName = senderText.split('(')[0].replace('Gönderen:', '').trim();
        const senderEmail = senderText.match(/\(([^)]+)\)/)[1];
        const subject = message.querySelector('h3').textContent;
        const originalMessage = message.querySelector('.message-content p').textContent;
        
        document.getElementById('replyMessageId').value = messageId;
        document.getElementById('replySenderName').textContent = senderName;
        document.getElementById('replySenderEmail').textContent = senderEmail;
        document.getElementById('replySubject').textContent = subject;
        document.getElementById('replyOriginalMessage').textContent = originalMessage;
        
        document.getElementById('replyModal').style.display = 'flex';
    }

    function closeReplyModal() {
        document.getElementById('replyModal').style.display = 'none';
        document.getElementById('replyForm').reset();
    }

    // Mesaj silme
    async function deleteMessage(messageId, event) {
        event.stopPropagation();
        
        if (confirm('Bu mesajı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.')) {
            try {
                const response = await fetch(`/messages/admin/${messageId}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    const message = document.querySelector(`[data-id="${messageId}"]`);
                    message.style.opacity = '0';
                    message.style.transform = 'translateX(-100px)';
                    
                    setTimeout(() => {
                        message.remove();
                        updateUnreadCount();
                    }, 300);
                    
                    showNotification('Mesaj silindi!', 'success');
                }
            } catch (error) {
                console.error('Mesaj silme hatası:', error);
                showNotification('Mesaj silinirken bir hata oluştu!', 'error');
            }
        }
    }

    // Cevap formu gönderme
    document.getElementById('replyForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const messageId = document.getElementById('replyMessageId').value;
        const replyMessage = document.getElementById('replyMessage').value;
        
        const submitBtn = this.querySelector('button[type="submit"]');
        submitBtn.innerHTML = '⏳ Gönderiliyor...';
        submitBtn.disabled = true;
        
        try {
            const response = await fetch(`/messages/admin/${messageId}/reply`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    replyMessage
                })
            });
            
            const data = await response.json();
            
            if (data.success) {
                showNotification('Cevap başarıyla gönderildi!', 'success');
                closeReplyModal();
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            } else {
                showNotification(data.error || 'Cevap gönderilirken bir hata oluştu!', 'error');
                submitBtn.innerHTML = '📧 Cevabı Gönder';
                submitBtn.disabled = false;
            }
        } catch (error) {
            console.error('Cevap gönderme hatası:', error);
            showNotification('İşlem sırasında bir hata oluştu!', 'error');
            submitBtn.innerHTML = '📧 Cevabı Gönder';
            submitBtn.disabled = false;
        }
    });

    // Okunmamış mesaj sayısını güncelle
    function updateUnreadCount() {
        const unreadCount = document.querySelectorAll('.message-item.unread').length;
        
        // İstatistik kartını güncelle
        const unreadStat = document.querySelector('.stat-card:nth-child(2) .stat-number');
        if (unreadStat) {
            unreadStat.textContent = unreadCount;
        }
    }

    // Modal dışına tıklayınca kapatma
    document.getElementById('replyModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeReplyModal();
        }
    });

    // Sayfa yüklendiğinde zaman damgalarını ayarla
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.message-item').forEach(item => {
            const dateText = item.querySelector('div > div:nth-child(3)').textContent;
            const dateMatch = dateText.match(/Gönderim: (.+)/);
            if (dateMatch) {
                const date = new Date(dateMatch[1]);
                item.dataset.timestamp = date.getTime();
            }
        });
    });

    // Bildirim fonksiyonu
    function showNotification(message, type) {
        // Basit bir bildirim sistemi - mevcut sisteminize entegre edebilirsiniz
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: 5px;
            color: white;
            z-index: 10000;
            font-weight: 500;
            animation: slideIn 0.3s ease;
        `;
        
        if (type === 'success') {
            notification.style.background = 'var(--success)';
        } else {
            notification.style.background = 'var(--danger)';
        }
        
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 3000);
    }
    </script>

    <style>
    .message-item {
        transition: all 0.3s ease;
    }

    .message-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    .message-item.unread {
        background: var(--dark-gray) !important;
    }

    .message-item.urgent {
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% { border-left-color: var(--danger); }
        50% { border-left-color: #ff6b6b; }
        100% { border-left-color: var(--danger); }
    }

    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    </style>
</body>
</html>